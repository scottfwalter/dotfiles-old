##########################
# CORE
##########################
alias cwd="pwd | pbcopy"
alias ls="exa --icons --group-directories-first"
alias ll="exa --icons --group-directories-first -l"
alias cat="bat"

function reload() {
    source ~/.zshrc
}

function on_mac() {
	[[ $(uname -a | grep -c "Darwin") -eq 1 ]]
}

function on_wsl() {
	[[ $(uname -a | grep -c "Microsoft") -eq 1 ]]
}

function mkd {
  mkdir -p $1
  cd $1
}

##########################
# GIT
##########################
alias edit-git-config="git config --global --edit"

##########################
# Pretty Output
##########################

# echo in green
function ohai() {
	local green='\033[0;32m'
	local reset='\033[0m'
	local msg="${1}"

	echo -e "${green}${msg}${reset}"
}

# color echo
function cecho() {
    echo -e "${1}${2}"

    #Reset text attributes to normal + without clearing screen
    tput sgr0
}

# Set shell title useful in multi-tab terminal apps
function title() {
    echo -n -e "\033]0;$1\007"
}

##########################
# Process and Ports
##########################

# Kills process by a grep syntax
function killbygrep() {
   ps -ef | grep $1 | grep -v grep | awk '{print $2}' | xargs kill -9
}

fp() {
    ps Ao pid,comm|awk '{match($0,/[^\/]+$/); print substr($0,RSTART,RLENGTH)": "$1}'|grep -i $1|grep -v grep
}


#Kill Port
function killbyport() {
    lsof -i :$1 | tail -n+2 | awk '{ print $2 }' | xargs kill
}

# What is using a particular port
function usingport() {
	sudo lsof -iTCP:$1 -sTCP:LISTEN
}

# Check if a port is in use
function portused() {
    #count=$(lsof -P | grep ":$1" | wc -l)
    count=$(netstat -an | grep $1 | wc -l)

    if [ $count -eq 0 ]
    then
        echo "Port not in use"
    else
        echo "Port in use"
    fi
}

##########################
# Networking
##########################

#get the ip address of a host
function hostip() {
  host $1|grep " has address "|cut -d" " -f4
}

# List files with specified Finder tags in current directory and subdirectories
function lst() {
    local query
    # if the first argument is "all" (case insensitive),

    bool="OR"
    [[ $1 =~ "all" ]] && bool="AND" && shift

    # if there's no argument or the argument is "+"
    # list all files with any tags
    if [[ -z $1 || $1 == "+" ]]; then
        query="kMDItemUserTags == '*'"

    # if the first argument is "-"
    #	# list only files without tags
    elif [[ $1 == "-" ]]; then
        query="kMDItemUserTags != '*'"

    # Otherwise, build a Spotlight syntax query string
    else
        query="tag:$1"
        shift
        for tag in $@; do
            query="$query $bool tag:$tag"
        done
    fi

    while IFS= read -r -d $'\0' line; do
        echo ${line#`pwd`/}
    done < <(mdfind -onlyin . -0 "$query")
}

##########################
# File and Directory
##########################
 function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh
    else
        local arg=-sh
    fi

    if [[ -n "$@" ]]; then
        du $arg -- "$@"
    else
        du $arg .[^.]* *
    fi
}

##########################
# JSON
##########################
alias jj='pbpaste | jsonpp | pbcopy'
alias jjj='pbpaste | jsonpp'

##########################
# Apps
##########################
alias eobsidian="code \"/Users/scott/Library/Mobile Documents/iCloud~md~obsidian/Documents/My Second Brain\""
alias enginx='code /opt/homebrew/etc/nginx/nginx.conf'

function youtube() {
    youtube-dl  --ffmpeg-location /usr/local/bin/ffmpeg --all-subs --embed-subs --embed-thumbnail --add-metadata --merge-output-format mp4 --format bestvideo[ext=mp4]+bestaudio[ext=m4a] "$1"
}

# ~/.zshrc
clear-scrollback-and-screen () {
  zle clear-screen
  tmux clear-history
}
zle -N clear-scrollback-and-screen
bindkey -v '^L' clear-scrollback-and-screen

